# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.scalalast_data_detectors import ScalalastDataDetectors  # noqa: F401,E501
from swagger_server import util


class InlineResponse2002(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, timestamp: str=None, detectors: List[ScalalastDataDetectors]=None):  # noqa: E501
        """InlineResponse2002 - a model defined in Swagger

        :param id: The id of this InlineResponse2002.  # noqa: E501
        :type id: str
        :param timestamp: The timestamp of this InlineResponse2002.  # noqa: E501
        :type timestamp: str
        :param detectors: The detectors of this InlineResponse2002.  # noqa: E501
        :type detectors: List[ScalalastDataDetectors]
        """
        self.swagger_types = {
            'id': str,
            'timestamp': str,
            'detectors': List[ScalalastDataDetectors]
        }

        self.attribute_map = {
            'id': 'id',
            'timestamp': 'timestamp',
            'detectors': 'detectors'
        }
        self._id = id
        self._timestamp = timestamp
        self._detectors = detectors

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2002':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_2 of this InlineResponse2002.  # noqa: E501
        :rtype: InlineResponse2002
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this InlineResponse2002.

        Intersection id  # noqa: E501

        :return: The id of this InlineResponse2002.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this InlineResponse2002.

        Intersection id  # noqa: E501

        :param id: The id of this InlineResponse2002.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this InlineResponse2002.

        Server time when this record has been written into the database.  # noqa: E501

        :return: The timestamp of this InlineResponse2002.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this InlineResponse2002.

        Server time when this record has been written into the database.  # noqa: E501

        :param timestamp: The timestamp of this InlineResponse2002.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def detectors(self) -> List[ScalalastDataDetectors]:
        """Gets the detectors of this InlineResponse2002.


        :return: The detectors of this InlineResponse2002.
        :rtype: List[ScalalastDataDetectors]
        """
        return self._detectors

    @detectors.setter
    def detectors(self, detectors: List[ScalalastDataDetectors]):
        """Sets the detectors of this InlineResponse2002.


        :param detectors: The detectors of this InlineResponse2002.
        :type detectors: List[ScalalastDataDetectors]
        """
        if detectors is None:
            raise ValueError("Invalid value for `detectors`, must not be `None`")  # noqa: E501

        self._detectors = detectors
