# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, detectors: List[str]=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param id: The id of this InlineResponse200.  # noqa: E501
        :type id: str
        :param detectors: The detectors of this InlineResponse200.  # noqa: E501
        :type detectors: List[str]
        """
        self.swagger_types = {
            'id': str,
            'detectors': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'detectors': 'detectors'
        }
        self._id = id
        self._detectors = detectors

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this InlineResponse200.

        Identifier of an intersection, in SCALA notation, i.e.  a string \"FD<<district>><<number>>\".  # noqa: E501

        :return: The id of this InlineResponse200.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this InlineResponse200.

        Identifier of an intersection, in SCALA notation, i.e.  a string \"FD<<district>><<number>>\".  # noqa: E501

        :param id: The id of this InlineResponse200.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def detectors(self) -> List[str]:
        """Gets the detectors of this InlineResponse200.

        List of detector names for the intersection. Detectors  bear both SCALA id and traffic engineering mapping id, represented by a a string \"<<scala_id>>_<<traffic_map_id>>\"  # noqa: E501

        :return: The detectors of this InlineResponse200.
        :rtype: List[str]
        """
        return self._detectors

    @detectors.setter
    def detectors(self, detectors: List[str]):
        """Sets the detectors of this InlineResponse200.

        List of detector names for the intersection. Detectors  bear both SCALA id and traffic engineering mapping id, represented by a a string \"<<scala_id>>_<<traffic_map_id>>\"  # noqa: E501

        :param detectors: The detectors of this InlineResponse200.
        :type detectors: List[str]
        """

        self._detectors = detectors
